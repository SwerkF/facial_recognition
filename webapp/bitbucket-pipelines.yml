image: node:18

definitions:
  caches:
    pnpm: ~/.local/share/pnpm/store

pipelines:
  default:
    - step:
        name: Install dependencies
        caches:
          - pnpm
        script:
          - npm install -g pnpm
          - pnpm install --no-frozen-lockfile
        artifacts:
          - node_modules/**
          - backend/node_modules/**
          - frontend/node_modules/**
          - shared/node_modules/**

    - parallel:
        - step:
            name: Backend - Quality Check
            caches:
              - pnpm
            script:
              - npm install -g pnpm
              - cd backend
              - echo "üé® V√©rification du formatage Prettier pour le backend..."
              - pnpm prettier --check "src/**/*.{ts,js,json}" --config .prettierrc
              - echo "üîç V√©rification ESLint pour le backend..."
              - pnpm lint
              - echo "‚úÖ Le backend est conforme"

        - step:
            name: Frontend - Quality Check
            caches:
              - pnpm
            script:
              - npm install -g pnpm
              - cd frontend
              - echo "üé® V√©rification du formatage Prettier pour le frontend..."
              - pnpm prettier --check "src/**/*.{ts,tsx,js,jsx,json,css}" --config .prettierrc
              - echo "üîç V√©rification ESLint pour le frontend..."
              - pnpm lint
              - echo "‚úÖ Le frontend est conforme"

        - step:
            name: Shared - Quality Check
            caches:
              - pnpm
            script:
              - npm install -g pnpm
              - cd shared
              - echo "üé® V√©rification du formatage Prettier pour shared..."
              - pnpm prettier --check "**/*.{ts,js,json}" --config .prettierrc
              - echo "üîç V√©rification ESLint pour shared..."
              - pnpm lint
              - echo "‚úÖ Le shared est conforme"

    - parallel:
        - step:
            name: Backend - TypeScript Check
            caches:
              - pnpm
            script:
              - npm install -g pnpm
              - cd backend
              - echo "üîç V√©rification TypeScript pour le backend..."
              - pnpm tsc --noEmit
              - echo "‚úÖ Pas d'erreurs TypeScript dans le backend"

        - step:
            name: Frontend - TypeScript Check
            caches:
              - pnpm
            script:
              - npm install -g pnpm
              - cd frontend
              - echo "üîç V√©rification TypeScript pour le frontend..."
              - pnpm tsc --noEmit
              - echo "‚úÖ Pas d'erreurs TypeScript dans le frontend"

  branches:
    main:
      - step:
          name: Install dependencies
          caches:
            - pnpm
          script:
            - npm install -g pnpm
            - pnpm install --no-frozen-lockfile
          artifacts:
            - node_modules/**
            - backend/node_modules/**
            - frontend/node_modules/**
            - shared/node_modules/**

      - parallel:
          - step:
              name: Backend - Full Check
              caches:
                - pnpm
              script:
                - npm install -g pnpm
                - cd backend
                - echo "üé® V√©rification du formatage..."
                - pnpm prettier --check "src/**/*.{ts,js,json}" --config .prettierrc
                - echo "üîç V√©rification TypeScript..."
                - pnpm tsc --noEmit
                - echo "üîç V√©rification ESLint..."
                - pnpm lint
                - echo "‚úÖ Backend valid√©"

          - step:
              name: Frontend - Full Check
              caches:
                - pnpm
              script:
                - npm install -g pnpm
                - cd frontend
                - echo "üé® V√©rification du formatage..."
                - pnpm prettier --check "src/**/*.{ts,tsx,js,jsx,json,css}" --config .prettierrc
                - echo "üîç V√©rification TypeScript..."
                - pnpm tsc --noEmit
                - echo "üîç V√©rification ESLint..."
                - pnpm lint
                - echo "‚úÖ Frontend valid√©"

          - step:
              name: Shared - Full Check
              caches:
                - pnpm
              script:
                - npm install -g pnpm
                - cd shared
                - echo "üé® V√©rification du formatage..."
                - pnpm prettier --check "**/*.{ts,js,json}" --config .prettierrc
                - echo "üîç V√©rification ESLint..."
                - pnpm lint
                - echo "‚úÖ Shared valid√©"

      - step:
          name: Build Applications
          caches:
            - pnpm
          script:
            - echo "üî® Construction des applications..."
            - cd backend && pnpm build
            - cd ../frontend && pnpm build
            - echo "‚úÖ Applications construites avec succ√®s"
          artifacts:
            - backend/dist/**
            - frontend/dist/**

  pull-requests:
    "**":
      - step:
          name: Install dependencies
          caches:
            - pnpm
          script:
            - npm install -g pnpm
            - pnpm install --no-frozen-lockfile
          artifacts:
            - node_modules/**
            - backend/node_modules/**
            - frontend/node_modules/**
            - shared/node_modules/**

      - parallel:
          - step:
              name: Backend - Code Quality
              caches:
                - pnpm
              script:
                - npm install -g pnpm
                - cd backend
                - echo "üîç V√©rification de la qualit√© du code backend..."
                - pnpm prettier --check "src/**/*.{ts,js,json}" --config .prettierrc
                - pnpm tsc --noEmit
                - pnpm lint
                - echo "‚úÖ Qualit√© du code backend valid√©e"

          - step:
              name: Frontend - Code Quality
              caches:
                - pnpm
              script:
                - npm install -g pnpm
                - cd frontend
                - echo "üîç V√©rification de la qualit√© du code frontend..."
                - pnpm prettier --check "src/**/*.{ts,tsx,js,jsx,json,css}" --config .prettierrc
                - pnpm tsc --noEmit
                - pnpm lint
                - echo "‚úÖ Qualit√© du code frontend valid√©e"

          - step:
              name: Shared - Code Quality
              caches:
                - pnpm
              script:
                - npm install -g pnpm
                - cd shared
                - echo "üîç V√©rification de la qualit√© du code shared..."
                - pnpm prettier --check "**/*.{ts,js,json}" --config .prettierrc
                - pnpm lint
                - echo "‚úÖ Qualit√© du code shared valid√©e"
