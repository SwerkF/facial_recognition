meta {
  name: Verify Token
  type: http
  seq: 2
}

get {
  url: {{baseUrl}}/auth/me
  body: none
  auth: inherit
}

script:post-response {
  if (res.status === 200) {
    console.log("‚úÖ Token valide:", res.body);
  } else if (res.status === 401) {
    console.log("‚ùå Token invalide ou expir√©");
    console.log("üîÑ Tentative de renouvellement automatique...");
    
    // D√©clencher le renouvellement du token
    const loginResponse = await fetch(`${bru.getVar("baseUrl")}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email: "oliwer721@gmail.com",
        password: "motdepasse"
      })
    });
    
    if (loginResponse.ok) {
      const data = await loginResponse.json();
      if (data.data && data.data.accessToken) {
        bru.setVar("jwtToken", data.data.accessToken);
        console.log("‚úÖ Token renouvel√© avec succ√®s");
      }
    }
  } else {
    console.log("‚ùå Erreur inattendue:", res.status, res.body);
  }
} 